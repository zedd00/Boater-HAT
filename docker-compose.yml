version: '3'
services:
  plex:
    container_name: plex
    image: 'plexinc/pms-docker:latest'
    environment:
      - TZ=America/Los_Angeles
      - PLEX_UID=1000
      - PLEX_GID=999
    volumes:
      - '/docker/plex:/config'
      - '/docker/plex/temp:/transcode'
      - '/media/share:/data'
      - '/media/share/Music:/music'
    ports:
      - '32400:32400'
    restart: always
  nginx-proxy:
    container_name: nginx-proxy
    image: jwilder/nginx-proxy
    environment:
      - ENABLE_IPV6=false
    volumes:
      - /docker/nginx-config:/etc/nginx/conf.d
      - /docker/certs:/etc/nginx/certs
      - /docker/nginx-vhost:/etc/nginx/vhost.d
      - /docker/nginx-html:/usr/share/nginx/html
      - /docker/nginx-dhparam:/etc/nginx/dhparam
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - '80:80'
      - '443:443'
    restart: always
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true
  letsencrypt-nginx-proxy-companion:
    container_name: letsencrypt-nginx-proxy-companion
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - '/docker/certs:/etc/nginx/certs:rw'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '/docker/nginx-vhost:/etc/nginx/vhost.d'
      - '/docker/nginx-html:/usr/share/nginx/html'
      - '/docker/nginx-dhparam:/etc/nginx/dhparam'
    restart: always
  watchtower:
    container_name: watchtower
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    command: '--cleanup -i 86400'
  wikijs:
    image: lscr.io/linuxserver/wikijs:latest
    container_name: wiki
    environment:
      - PUID=1000
      - PGID=999
      - TZ=America/Los_Angeles
      - baseurl=${WIKI_HOST}
      - VIRTUAL_HOST=${WIKI_HOST}
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=${WIKI_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - /docker/wiki/config:/config
      - /docker/wiki/data:/data
    ports:
      - 8000:3000
    restart: unless-stopped
  portainer:
    container_name: portainer
    image: 'portainer/portainer:latest'
    environment:
      - VIRTUAL_HOST=${PORT_HOST}
      - VIRTUAL_PORT=8001
      - LETSENCRYPT_HOST=${PORT_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - '/docker/portainer:/data'
    ports:
      - '8001:9000'
    restart: always
    command: '-H unix:///var/run/docker.sock'
  qbittorrent:
    container_name: qbittorrent
    image: 'lscr.io/linuxserver/qbittorrent:latest'
    environment:
      - PUID=1000
      - PGID=999
      - TZ=America/Los_Angeles
      - WEBUI_PORT=8002
    volumes:
      - '/docker/torrentq/config:/config'
      - '/media/share/Downloads:/downloads'
    ports:
      - '8002:8002'
      - '51416:51416/tcp'
      - '51416:51416/udp'
    restart: always
  torrentvpn:
    container_name: qtorrentvpn
    image: haugene/transmission-openvpn
    environment:
      - PUID=1000
      - PGID=999
      - TZ=America/Los_Angeles
      - TRANSMISSION_DOWNLOAD_DIR=/downloads
      - TRANSMISSION_WATCH_DIR=/downloads/watch
      - TRANSMISSION_INCOMPLETE_DIR=/downloads/incomplete
      - TRANSMISSION_WEB_UI=kettu
      - NORDVPN_CATEGORY=the_americas
      - OPENVPN_PROVIDER=${OPENVPN_PROVIDER}
      - OPENVPN_USERNAME=${OPENVPN_USERNAME}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - NORDVPN_COUNTRY=US
      - NORDVPN_PROTOCOL=tcp
      - WARDING-ENABLED=true
      - PORT_FORWARDING_ENABLED=true
      - WEBPROXY_ENABLED=false
      - LOCAL_NETWORK=${LOCAL_NETWORK}
      - CREATE_TUN_DEVICE=true  
      - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=30
      - TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED=false
      - TRANSMISSION_IDLE_SEEDING_LIMIT=1
      - TRANSMISSION_MAX_PEERS_GLOBAL=5000
      - TRANSMISSION_QUEUES=20 
      - TRANSMISSION_QUEUE_STALLED_MINUTES=5
      - TRANSMISSION_RATIO_LIMIT_ENABLED=true
      - TRANSMISSION_RATIO_LIMIT=1
      - GLOBAL_APPLY_PERMISSIONS=false
      - TRANSMISSION_PEER_PORT=51413        
    volumes:
      - '/docker/torrents/config:/config'
      - '/docker/torrents/torrents-data:/data'
      - '/media/share/Downloads:/downloads'
    ports:
      - '8003:9091'
      - '51413:51413/tcp'
      - '51413:51413/udp'
    privileged: true
    restart: always
  sabnzb:
    container_name: sabnzb
    image: 'lscr.io/linuxserver/sabnzbd:latest'
    environment:
      - TZ=America/Los_Angeles
      - WEBUI_PORT=8004
      - PGID=999
      - PUID=1000
    volumes:
      - '/docker/nzbget:/config'
      - '/media/share/Downloads:/downloads'
    ports:
      - '8004:8080'
    restart: always
  prowlarr:
    container_name: prowlarr
    image: 'lscr.io/linuxserver/prowlarr:develop'
    environment:
      - TZ=America/Los_Angeles
      - PGID=999
      - PUID=1000
    volumes:
      - '/media/share/Downloads:/downloads'
      - '/docker/prowlarr/config:/config'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '8005:9696'
    cap_add:
      - NET_ADMIN
    restart: always
  sonarr:
    container_name: sonarr
    image: 'linuxserver/sonarr:latest'
    environment:
      - TZ=America/Los_Angeles
      - WEBUI_PORT=8006
      - PGID=999
      - PUID=1000
    volumes:
      - '/docker/sonarr:/config'
      - '/media/share/TV:/tv'
      - '/media/share/Downloads:/downloads'
    ports:
      - '8006:8989'
    restart: always
  radarr:
    container_name: radarr
    image: 'linuxserver/radarr:latest'
    environment:
      - TZ=America/Los_Angeles
      - WEBUI_PORT=8007
      - PGID=999
      - PUID=1000
    volumes:
      - '/docker/radarr:/config'
      - '/media/share/Downloads:/downloads'
      - '/media/share/Movies:/movies'
    ports:
      - '8007:7878'
    restart: always
  lidarr:
    container_name: lidarr
    image: 'linuxserver/lidarr:latest'
    environment:
      - TZ=America/Los_Angeles
      - WEBUI_PORT=8008
      - PGID=999
      - PUID=1000
    volumes:
      - '/docker/lidarr:/config'
      - '/media/share/Downloads:/downloads'
      - '/media/share/Music:/music'
    ports:
      - '8008:8686'
    restart: always  
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - TZ=America/Los_Angeles
      - WEBUI_PORT=8009
      - PGID=999
      - PUID=1000
    volumes:
      - /docker/readarr:/config
      - /media/share/Library:/books 
      - /media/share/Downloads:/downloads
    ports:
      - 8009:8787
    restart: unless-stopped
  lazylibrarian:
    container_name: lazylibrarian
    image: 'linuxserver/lazylibrarian:latest'
    environment:
      - TZ=America/Los_Angeles
      - WEBUI_PORT=8010
      - PGID=999
      - PUID=1000
    volumes:
      - '/docker/lazylibrarian:/config'
      - '/media/share/Downloads:/downloads'
      - '/media/share/Library/unsorted:/books'
    ports:
      - '8010:5299'
    restart: always
  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr
    environment:
      - serverIP=${SERVERIP}
      - serverPort=8266
      - webUIPort=8011
      - internalNode=true
      - nodeID=MyInternalNode
      - TZ=America/Los_Angeles
      - PGID=999
      - PUID=1000
    volumes:
      - '/docker/tdarr/server:/app/server'
      - '/docker/tdarr/configs:/app/configs'
      - '/docker/tdarr/logs:/app/logs'
      - '/media/share/:/media'
      - '/transcode_cache:/temp'
    ports:
      - '8011:8011'
      - '8266:8266'
    restart: always
    devices:
      - '/dev/dri:/dev/dri'
  beets:
    container_name: beets
    image: linuxserver/beets
    environment:
      - WEBUI_PORT=8012
      - PGID=999
      - PUID=1000
    volumes:
      - '/docker/beets:/config'
      - '/media/share/Downloads/Music:/downloads'
      - '/media/share/Music:/music'
    ports:
      - '8012:8337'
    restart: always
  bazarr:
    container_name: bazarr
    image: 'lscr.io/linuxserver/bazarr:latest'
    environment:
      - TZ=America/Los_Angeles
      - PGID=999
      - PUID=1000
    volumes:
      - '/docker/bazarr/config:/config'
      - '/media/share//movies:/Movies'
      - '/media/share/TV:/tv'
    ports:
      - '8013:6767'
    restart: always
  musicbrainz:
    container_name: musicbrainz
    image: linuxserver/musicbrainz
    environment:
      - TZ=America/Los_Angeles
      - BRAINZCODE='N996CU6CxZziFiQwrrCtKRTMvH4pPOycIbPcsRwp'
      - NPROC=10
      - WEBADDRESS=10.10.1.242
      - WEBUI_PORT=8014
      - PGID=999
      - PUID=1000
    volumes:
      - '/docker/musicbrainz:/config'
      - '/docker/musicbrainz-data:/data'
    ports:
      - '8014:8014'
    restart: always
  ubooquity:
    container_name: ubooquity
    image: 'linuxserver/ubooquity:latest'
    environment:
      - MAXMEM=8192
      - VIRTUAL_PORT=2202
      - VIRTUAL_HOST=${READ_HOST}
      - LETSENCRYPT_HOST=${READ_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - PGID=999
      - PUID=1000
    volumes:
      - '/docker/ubooquity:/config'
      - '/media/share/Library:/books'
      - '/media/share/Library/Comics:/comics'
      - '/media/share:/files'
    ports:
      - '8015:2202'
      - '8016:2203'
    restart: always
  airsonic:
    container_name: airsonic
    image: linuxserver/airsonic
    environment:
      - TZ=America/Los_Angeles
      - VIRTUAL_HOST=${MUSIC_HOST}
      - VIRTUAL_PORT=4040
      - LETSENCRYPT_HOST=${MUSIC_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - '/docker/airsonic:/config'
      - '/media/share/Music:/music'
      - '/media/share/Music/playlists:/playlists'
      - '/media/share/Music/podcasts:/podcasts'
      - '/media/share/Music/audiobooks:/media'
    ports:
      - '8017:4040'
    restart: always
  ombi:
    container_name: ombi
    image: linuxserver/ombi
    environment:
      - TZ=America/Los_Angeles
      - baseurl=${OMBI_HOST}
      - VIRTUAL_HOST=${OMBI_HOST}
      - VIRTUAL_PORT=3579
      - LETSENCRYPT_HOST=${OMBI_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - PGID=999
      - PUID=1000
    volumes:
      - '/docker/ombi:/config'
    ports:
      - '8018:3579'
    restart: always
  nextcloud-db:
    container_name: nextcloud-db
    image: mariadb:10.5
    restart: always
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - /media/share/nextcloud/db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
  nextcloud-app:
    container_name: nextcloud-app
    image: nextcloud
    restart: always
    ports:
      - 8080:80
    links:
      - nextcloud-db
    volumes:
      - /media/share/nextcloud/app:/var/www/html
    environment:
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_HOST=nextcloud-db 
      - TZ=America/Los_Angeles
      - baseurl=${NEXT_HOST}
      - VIRTUAL_HOST=${NEXT_HOST}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${NEXT_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - PGID=999
      - PUID=1000
  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    volumes:
      - '/docker/flaresolver:/config' 
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=America/Los_Angeles
    ports:
      - "8019:8191"
    restart: unless-stopped
